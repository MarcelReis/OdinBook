name: Deploy
"on":
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set node version
        uses: actions/setup-node@v2
        with:
          node-version: "12"

      - name: Config App env variables
        run: |
          cd packages/app
          echo REACT_APP_APIKEY=${{ secrets.APIKEY }} >> .env
          echo REACT_APP_AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }} >> .env
          echo REACT_APP_DATA_BASE_URL=${{ secrets.DATA_BASE_URL }} >> .env
          echo REACT_APP_PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
          echo REACT_APP_STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }} >> .env
          echo REACT_APP_MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }} >> .env
          echo REACT_APP_APP_ID=${{ secrets.APP_ID }} >> .env
          echo REACT_APP_MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }} >> .env

      - name: Restore lerna
        id: restore-lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.restore-lerna.outputs.cache-hit != 'true'
        run: npx lerna bootstrap --scope={functions,app}

      - name: Lint
        run: lerna run lint --parallel

      - name: Test
        run: lerna run test --parallel

      - name: Build packages
        run: npx lerna run build --scope={functions,app} --parallel

      - name: Deploy Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_ODINBOOK_30F97 }}"
          channelId: live
          projectId: odinbook-30f97
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Deploy Functions
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
